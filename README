
Example: Simple Bus Transaction (Manager ‚Üî Slave)

Let‚Äôs model a very simplified bus:
The manager sends an address, data, and a write enable signal.
The slave responds with ready and read data.

1Ô∏è‚É£ Define a Common Interface : We‚Äôll use a bus_if interface to hold all signals between manager and slave.

2Ô∏è‚É£ Manager (Master) Module : This initiates read/write transactions.

3Ô∏è‚É£ Slave Module : This responds to manager‚Äôs requests.

4Ô∏è‚É£ Top-Level Testbench : Connect both modules through the same interface ‚Äî this shows the manager/slave port connection clearly.

üß† Key Takeaways :

| Concept                     | Description                                                                  |
| --------------------------- | ---------------------------------------------------------------------------- |
| **Manager Port**            | Drives control and data (`valid`, `wr_en`, `addr`, `wdata`)                  |
| **Slave Port**              | Responds to manager‚Äôs requests (`ready`, `rdata`)                            |
| **Interface**               | Provides clean connection between both ends                                  |
| **Verification Equivalent** | In UVM, these correspond to initiator (manager) and responder (slave) agents |

